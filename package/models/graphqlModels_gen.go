// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

type ProjectPageResult interface {
	IsProjectPageResult()
}

type ProjectPagesResult interface {
	IsProjectPagesResult()
}

type SignInResult interface {
	IsSignInResult()
}

type StudentResult interface {
	IsStudentResult()
}

type AbsoluteMediaHTTP struct {
	ID          string `json:"ID"`
	URI         string `json:"URI"`
	URIAbsolute string `json:"URI_Absolute"`
}

type CourseAPIMediaCollectionHTTP struct {
	ID          string             `json:"ID"`
	BannerImage *AbsoluteMediaHTTP `json:"Banner_Image"`
	CourseImage *MediaHTTP         `json:"Course_Image"`
	CourseVideo *MediaHTTP         `json:"Course_Video"`
	Image       *ImageHTTP         `json:"Image"`
}

type CourseHTTP struct {
	ID               string                        `json:"ID"`
	BlocksURL        string                        `json:"Blocks_URL"`
	Effort           string                        `json:"Effort"`
	EnrollmentStart  string                        `json:"Enrollment_Start"`
	EnrollmentEnd    string                        `json:"Enrollment_End"`
	End              string                        `json:"End"`
	Name             string                        `json:"Name"`
	Number           string                        `json:"Number"`
	Org              string                        `json:"Org"`
	ShortDescription string                        `json:"Short_Description"`
	Start            string                        `json:"Start"`
	StartDisplay     string                        `json:"Start_Display"`
	StartType        string                        `json:"Start_Type"`
	Pacing           string                        `json:"Pacing"`
	MobileAvailable  bool                          `json:"Mobile_Available"`
	Hidden           bool                          `json:"Hidden"`
	InvitationOnly   bool                          `json:"Invitation_Only"`
	Overview         *string                       `json:"Overview"`
	CourseID         string                        `json:"Course_ID"`
	Media            *CourseAPIMediaCollectionHTTP `json:"Media"`
}

type CourseRelationHTTP struct {
	ID           string `json:"id"`
	LastModified string `json:"lastModified"`
	Parameter    string `json:"parameter"`
	CourseID     string `json:"courseId"`
	ObjectID     string `json:"objectId"`
}

type CourseRelationHTTPList struct {
	CourseRelations []*CourseRelationHTTP `json:"courseRelations"`
}

type CoursesListHTTP struct {
	Results    []*CourseHTTP `json:"Results"`
	Pagination *Pagination   `json:"Pagination"`
	CountRows  int           `json:"countRows"`
}

type DeletedCourseRelation struct {
	CourseRelationID string `json:"courseRelationId"`
}

type DeletedProjectPage struct {
	ProjectPageID string `json:"projectPageId"`
}

type DeletedStudent struct {
	StudentID string `json:"studentId"`
}

type EnrollmentHTTP struct {
	Created  string `json:"Created"`
	Mode     string `json:"Mode"`
	IsActive bool   `json:"IsActive"`
	User     string `json:"User"`
	CourseID string `json:"Course_ID"`
}

type EnrollmentsListHTTP struct {
	Next     string            `json:"Next"`
	Previous string            `json:"Previous"`
	Results  []*EnrollmentHTTP `json:"Results"`
}

type Error struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

func (Error) IsSignInResult() {}

func (Error) IsProjectPageResult() {}

func (Error) IsProjectPagesResult() {}

func (Error) IsStudentResult() {}

type ImageHTTP struct {
	ID    string `json:"ID"`
	Raw   string `json:"Raw"`
	Small string `json:"Small"`
	Large string `json:"Large"`
}

type MediaHTTP struct {
	ID  string `json:"ID"`
	URI string `json:"URI"`
}

type NewStudent struct {
	Email      string `json:"email"`
	Password   string `json:"password"`
	Nickname   string `json:"nickname"`
	Firstname  string `json:"firstname"`
	Lastname   string `json:"lastname"`
	Middlename string `json:"middlename"`
	ParentID   string `json:"parentId"`
}

type Pagination struct {
	Next     string `json:"Next"`
	Previous string `json:"Previous"`
	Count    int    `json:"Count"`
	NumPages int    `json:"Num_Pages"`
}

type ProjectPageHTTP struct {
	ProjectPageID string `json:"projectPageId"`
	LastModified  string `json:"lastModified"`
	ProjectID     string `json:"projectId"`
	Instruction   string `json:"instruction"`
	Notes         string `json:"notes"`
	Preview       string `json:"preview"`
	LinkScratch   string `json:"linkScratch"`
	Title         string `json:"title"`
	IsShared      bool   `json:"isShared"`
}

func (ProjectPageHTTP) IsProjectPageResult() {}

type ProjectPageHTTPList struct {
	ProjectPages []*ProjectPageHTTP `json:"projectPages"`
	CountRows    int                `json:"countRows"`
}

func (ProjectPageHTTPList) IsProjectPagesResult() {}

type SignInInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
	UserRole int    `json:"userRole"`
}

type SingInResponse struct {
	AccessToken string `json:"accessToken"`
}

func (SingInResponse) IsSignInResult() {}

type StudentHTTP struct {
	UserHTTP     *UserHTTP `json:"userHttp"`
	RobboGroupID string    `json:"robboGroupId"`
	RobboUnitID  string    `json:"robboUnitId"`
}

func (StudentHTTP) IsStudentResult() {}

type UpdateProfileInput struct {
	ID         string `json:"id"`
	Email      string `json:"email"`
	Nickname   string `json:"nickname"`
	Firstname  string `json:"firstname"`
	Lastname   string `json:"lastname"`
	Middlename string `json:"middlename"`
}

type UpdateProjectPage struct {
	ProjectID     string `json:"projectId"`
	ProjectPageID string `json:"projectPageId"`
	Instruction   string `json:"instruction"`
	Notes         string `json:"notes"`
	Title         string `json:"title"`
	IsShared      bool   `json:"isShared"`
}

type UserHTTP struct {
	ID         string `json:"id"`
	Email      string `json:"email"`
	Password   string `json:"password"`
	Role       int    `json:"role"`
	Nickname   string `json:"nickname"`
	Firstname  string `json:"firstname"`
	Lastname   string `json:"lastname"`
	Middlename string `json:"middlename"`
	CreatedAt  string `json:"createdAt"`
}
