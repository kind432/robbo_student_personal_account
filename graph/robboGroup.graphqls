type RobboGroupHttp {
	id: String!
	lastModified: Timestamp!
	name: String!
	robboUnitId: String!
	students: [StudentHttp!]
}

input NewRobboGroup {
	name: String!
	robboUnitId: String!
}

input UpdateRobboGroup {
	id: String!
	name: String!
	robboUnitId: String!
}

type DeletedRobboGroup {
	robboGroupId: String!
}

extend type Mutation {
	CreateRobboGroup(input: NewRobboGroup!): RobboGroupHttp!
	UpdateRobboGroup(input: UpdateRobboGroup!): RobboGroupHttp!
	DeleteRobboGroup(robboGroupId: String!): DeletedRobboGroup!
}

extend type Query {
	GetRobboGroupById(id: String!): RobboGroupHttp!
	GetRobboGroupsByTeacherId(teacherId: String!): [RobboGroupHttp!]!
	GetRobboGroupsByRobboUnitId(robboUnitId: String!): [RobboGroupHttp!]!
	GetRobboGroupsByUnitAdminID(unitAdminId: String!): [RobboGroupHttp!]!
	GetAllRobboGroups: [RobboGroupHttp!]!
	GetRobboGroupsByAccessToken: [RobboGroupHttp!]!
	SearchGroupsByName(name: String!): [RobboGroupHttp!]!
}