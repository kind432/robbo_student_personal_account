type ProjectPageHttp {
    projectPageId: String!
    lastModified: String!
    projectId: String!
    instruction: String!
    notes: String!
    preview: String!
    linkScratch: String!
    title: String!
    isShared: Boolean!
}

type ProjectPageHttpList {
    projectPages: [ProjectPageHttp!]!
}

type DeletedProjectPage {
    projectPageId: String!
}

input UpdateProjectPage {
    projectId: String!
    projectPageId: String!
    instruction: String!
    notes: String!
    title: String!
    isShared: Boolean!
}

union ProjectPageResult = ProjectPageHttp | ProjectPageHttpList | Error

extend type Mutation {
    CreateProjectPage: ProjectPageResult!
    UpdateProjectPage(input: UpdateProjectPage!): ProjectPageResult!
    DeleteProjectPage(projectId: String!): DeletedProjectPage!
}

extend type Query {
    GetProjectPageById(projectPageId: String!): ProjectPageResult!
    GetAllProjectPagesByUserId(userId: String!): ProjectPageResult!
    GetAllProjectPagesByAccessToken: ProjectPageResult!
}