type CourseHttp {
    id: String!
    blocks_url: String!
    effort: String!
    enrollment_start: Timestamp!
    enrollment_end: Timestamp!
    end: Timestamp!
    name: String!
    number: String!
    org: String!
    short_description: String!
    start: Timestamp!
    start_display: String!
    start_type: String!
    pacing: String!
    mobile_available: Boolean!
    hidden: Boolean!
    invitation_only: Boolean!
    overview: String
    course_id: String!
    media: CourseAPIMediaCollectionHttp!
}

type CourseAPIMediaCollectionHttp {
    id: String!
    banner_image: AbsoluteMediaHttp
    course_image: MediaHttp
    course_video: MediaHttp
    image: ImageHttp
}

type AbsoluteMediaHttp {
    id: String!
    uri: String!
    uri_absolute: String!
}

type ImageHttp {
    id: String!
    raw: String!
    small: String!
    large: String!
}

type MediaHttp {
    id: String!
    uri: String!
}

type EnrollmentHttp {
    created: Timestamp!
    mode: String!
    isActive: Boolean!
    user: String!
    course_id: String!
}

type EnrollmentsListHttp {
    next: String!
    previous: String!
    results:  [EnrollmentHttp!]
}

type Pagination {
    next: String!
    previous: String!
    count: Int!
    num_pages: Int!
}
type CoursesListHttp {
    results:    [CourseHttp!]!
    pagination: Pagination!
}

input NewCourseRelationGroup {
    courseId: String!
    robboGroupId: String!
}

input NewCourseRelationUnit {
    courseId: String!
    robboUnitId: String!
}

input NewCourseRelationRole {
    courseId: String!
    roleId: String!
}

type DeletedCourseRelation {
    courseRelationId: String!
}

type CourseRelationHttp {
    id: String!
    lastModified: String!
    parameter: String!
    courseId: String!
    objectId: String!
}

type CourseRelationHttpList {
    courseRelations: [CourseRelationHttp!]!
}

union CourseRelationResult = CourseRelationHttp | Error
union CourseRelationsResult = CourseRelationHttpList | Error
union CourseResult = CourseHttp | Error
union CoursesResult = CoursesListHttp | Error
union EnrollmentsResult = EnrollmentsListHttp | Error

extend type Mutation {
    CreateCourseRelationGroup(input: NewCourseRelationGroup!): CourseRelationResult!
    CreateCourseRelationUnit(input: NewCourseRelationUnit!): CourseRelationResult!
    CreateCourseRelationRole(input: NewCourseRelationRole!): CourseRelationResult!
    DeleteCourseRelationById(courseRelationId: String!): DeletedCourseRelation!
}

extend type Query {
    GetCourseRelationsByCourseId(courseId: String!): CourseRelationsResult!
    GetCourseRelationsByRobboUnitId(robboUnitId: String!): CourseRelationsResult!
    GetCourseRelationsByRobboGroupId(robboGroupId: String!): CourseRelationsResult!
    GetCourseRelationsByRoleId(roleId: String!): CourseRelationsResult!
    GetCourseRelationsUnits: CourseRelationsResult!
    GetCourseRelationsGroups: CourseRelationsResult!
    GetCourseRelationsRoles: CourseRelationsResult!
    GetCourseContent(courseId: String!): CourseResult!
    GetCoursesByUser: CoursesResult!
    GetAllPublicCourses(pageNumber: String!): CoursesResult!
    GetEnrollments(username: String!): EnrollmentsResult!
}