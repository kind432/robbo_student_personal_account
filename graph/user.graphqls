type UserHttp {
    id: ID!
    email: String!
    password: String!
    role: Int!
    nickname: String!
    firstname: String!
    lastname: String!
    middlename: String!
    createdAt: Timestamp!
    active: Boolean!
}

input UpdateProfileInput {
    id: String!
    email: String!
    nickname: String!
    firstname: String!
    lastname: String!
    middlename: String!
    active: Boolean!
}

type SuperAdminHttp {
    userHttp: UserHttp!
}

union GetUserResult = StudentHttp

extend type Query {
    GetUser(peekUserId: String, peekUserRole: Int): GetUserResult!
}

extend type Mutation {
    UpdateSuperAdmin(input: UpdateProfileInput!): StudentResult!
}